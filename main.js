(()=>{"use strict";var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{hi:()=>$,c4:()=>P,cM:()=>U});const t=document.querySelector(".cards__list"),r=document.querySelector("#card-modal"),s=r.querySelector(".modal__image"),n=r.querySelector(".modal__card-title"),o=document.querySelector(".profile__edit-button"),i=document.querySelector("#profile-modal"),a=document.querySelector(".profile__add-button"),l=document.querySelector("#cards-modal"),c=document.querySelector(".profile__title"),u=document.querySelector(".profile__subtitle"),d=i.querySelector(".form__input-name"),h=i.querySelector(".form__input-description"),m=(l.querySelector(".form__input-title"),l.querySelector(".form__input-link"),{inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}),p=i.querySelector(".form"),_=l.querySelector("#cards-form"),b=document.querySelector("#propic-form"),f=document.querySelector("#propic-modal"),v=document.querySelector(".profile__image-ed"),E=document.querySelector(".profile__image"),S=document.querySelector("#delete-modal");class y{constructor(e,t,r){this.name=e.name,this.link=e.link,this._cardSelector=t,this._handleImageClick=r,this.id=e._id,this.isLiked=e.isLiked}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}generateCard(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".card__image").src=this.link,this._cardElement.querySelector(".card__image").alt=`photo of ${this.name}`,this._cardElement.querySelector(".card__title").textContent=this.name,!0===this.isLiked&&this.buttonLike.classList.add("card__button-like_active"),this._cardElement}_setEventListeners(){this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)})),this.buttonLike=this._cardElement.querySelector(".card__button-like"),this.buttonLike.addEventListener("click",(()=>{this._handleLikeButton()})),this.buttonTrash=this._cardElement.querySelector(".card__button-delete"),this.buttonTrash.addEventListener("click",(()=>{U.open(),U.setDeleteListener(this._cardElement,this.id)}))}_handleLikeButton(){this.buttonLike.classList.toggle("card__button-like_active"),Array.from(this.buttonLike.classList).includes("card__button-like_active")?$.addLike(this.id):$.deleteLike(this.id)}_handleTrashButton(){this._cardElement.remove()}}function L(e){const t=e.name,r=e.link;P.open({title:t,link:r})}function k(e){return new y(e,"#card-template",L).generateCard()}function C(e,t,r){t.querySelector(".form__button").textContent=e?"Saving...":r}class q{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}showInputError(e,t){e.classList.add(this._inputErrorClass);const r=this._form.querySelector(`.${e.id}-error`);r.textContent=t,r.classList.add(this._errorClass)}hideInputError(e){e.classList.remove(this._inputErrorClass),this._form.querySelector(`.${e.id}-error`).classList.remove(this._errorClass)}checkInputValidity(e){if(e.validity.valid)this.hideInputError(e);else{const t=e.validationMessage;this.showInputError(e,t)}}hasInvalidInput(){return this.inputList.some((e=>!e.validity.valid))}toggleButtonState(){this.hasInvalidInput()?(this.buttonElement.classList.add(this._inactiveButtonClass),this.buttonElement.setAttribute("disabled",!0)):(this.buttonElement.classList.remove(this._inactiveButtonClass),this.buttonElement.removeAttribute("disabled"))}setEventListeners(){this.inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this.buttonElement=this._form.querySelector(this._submitButtonSelector),this.toggleButtonState(),this.inputList.forEach((e=>{this.inputElement=e,this.inputElement.addEventListener("input",(()=>{this.checkInputValidity(e),this.hasInvalidInput(),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.toggleButtonState()})),this.setEventListeners()}}class g{constructor(e,t){let{data:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=t}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}}class I{constructor(e){this.popup=e}open(){this.popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&(document.querySelector(".modal_opened"),this.close())};setEventListeners(){this.buttonClose=this.popup.querySelector(".modal__button-close"),this.buttonClose.addEventListener("click",(()=>{this.close()})),this.popup.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class j extends I{constructor(e,t){let{handleFormSubmit:r}=t;super(e),this.handleFormSubmit=r,this.form=this.popup.querySelector(".form")}close(){super.close(),this.form.reset(),this.form.querySelectorAll(".form__input-error").forEach((e=>{e.classList.remove("form__input-error_active")})),this.form.querySelectorAll(".form__input").forEach((e=>{e.classList.remove("form__input_type_error")}))}_getInputValues(){const e=this.form.querySelectorAll(".form__input"),t={};for(const r of e)t[r.name]=r.value;return t}setEventListeners(){super.setEventListeners(),this.form.addEventListener("submit",(e=>{C(!0,this.form),e.preventDefault(),this.handleFormSubmit(this._getInputValues()),this.close()}))}setDeleteListener(e,t){super.setEventListeners(),this.form.addEventListener("submit",(r=>{r.preventDefault(),this.handleFormSubmit(e,t),this.close()}))}}const P=new class extends I{constructor(e){super(e)}open(e){n.textContent=e.title,s.src=e.link,s.alt=`photo of ${e.title}`,super.open()}}(r);P.setEventListeners();const w=new class{constructor(e,t){this.name=e,this.job=t}getUserInfo(){return{name:this.name.textContent,about:this.job.textContent}}setUserInfo(e){let{name:t,about:r}=e;this.name.textContent=t,this.job.textContent=r}}(c,u),B=new j(i,{handleFormSubmit:e=>{$.editProfile(e),w.setUserInfo(e)}});B.setEventListeners(),o.addEventListener("click",(()=>{!function(e){let{name:t,about:r}=e;d.value=t,h.value=r}(w.getUserInfo()),B.open()}));const T=new j(l,{handleFormSubmit:e=>{$.addNewCard(e).then((e=>{const r=k(e);t.prepend(r)}))}});T.setEventListeners(),a.addEventListener("click",(()=>{T.open()})),new q(m,p).enableValidation(),new q(m,_).enableValidation();const $=new class{constructor(e){this._options=e}loadUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681"}}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}")))}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681"}}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}")))}editProfile(e){let{name:t,about:r}=e;return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681","Content-Type":"application/json"},body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}"))).finally((()=>{C(!1,p,"Save")}))}addNewCard(e){let{name:t,link:r}=e;return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681","Content-Type":"application/json"},body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}"))).finally((()=>{C(!1,_,"Create")}))}deleteCard(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}`,{method:"DELETE",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681"}}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}")))}addLike(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"PUT",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681"}}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}")))}deleteLike(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"DELETE",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681"}}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}")))}updateProPic(e){return fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681","Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}"))).finally((()=>{C(!1,b,"Save")}))}returnUserInfoAndCards(){const e=[$.loadUserInfo(),$.getInitialCards()];return Promise.all(e)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681","Content-Type":"application/json"}});$.returnUserInfoAndCards().then((e=>{w.setUserInfo(e[0]),E.src=e[0].avatar,new g({data:e[1],renderer:e=>{const r=k(e);t.append(r)}},t).renderItems()})).catch((e=>console.error(e)));const A=new j(f,{handleFormSubmit:e=>{$.updateProPic(e.link),E.src=e.link}});A.setEventListeners(),v.addEventListener("click",(()=>{A.open()}));const U=new j(S,{handleFormSubmit:(e,t)=>{$.deleteCard(t),e.remove()}});new q(m,b).enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,