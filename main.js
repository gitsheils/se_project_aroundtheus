(()=>{"use strict";var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{hi:()=>A,cM:()=>R,$f:()=>U});const t=document.querySelector(".cards__list"),r=document.querySelector("#card-modal"),s=r.querySelector(".modal__image"),n=r.querySelector(".modal__card-title"),i=document.querySelector(".profile__edit-button"),o=document.querySelector("#profile-modal"),a=document.querySelector(".profile__add-button"),l=document.querySelector("#cards-modal"),c=document.querySelector(".profile__title"),h=document.querySelector(".profile__subtitle"),d=o.querySelector(".form__input-name"),u=o.querySelector(".form__input-description"),m=(l.querySelector(".form__input-title"),l.querySelector(".form__input-link"),{inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}),_=o.querySelector(".form"),p=l.querySelector("#cards-form"),f=document.querySelector("#propic-form"),b=document.querySelector("#delete-form"),E=document.querySelector("#propic-modal"),S=document.querySelector(".profile__image-ed"),v=document.querySelector(".profile__image"),L=document.querySelector("#delete-modal");class y{constructor(e,t,r,s){let{handleDelete:n,handleLike:i,handleUnlike:o}=s;this.name=e.name,this.link=e.link,this._cardSelector=t,this._handleImageClick=r,this.id=e._id,this.isLiked=e.isLiked,this._handleDelete=n,this._handleLike=i,this._handleUnlike=o}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}generateCard(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".card__image").src=this.link,this._cardElement.querySelector(".card__image").alt=`photo of ${this.name}`,this._cardElement.querySelector(".card__title").textContent=this.name,!0===this.isLiked&&this.buttonLike.classList.add("card__button-like_active"),this._cardElement}_setEventListeners(){this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)})),this.buttonLike=this._cardElement.querySelector(".card__button-like"),this.buttonLike.addEventListener("click",(()=>{Array.from(this.buttonLike.classList).includes("card__button-like_active")?this._handleUnlike(this.id):this._handleLike(this.id)})),this.buttonTrash=this._cardElement.querySelector(".card__button-delete"),this.buttonTrash.addEventListener("click",(()=>{this._handleDelete(this._cardElement,this.id)}))}handleLikeButton(){this.buttonLike.classList.toggle("card__button-like_active")}_handleTrashButton(){this._cardElement.remove()}}function k(e){const t=e.name,r=e.link;U.open({title:t,link:r})}function g(e,t,r){t.querySelector(".form__button").textContent=e?"Saving...":r}class C{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._errorMessages=this._form.querySelectorAll(".form__input-error"),this._inputs=this._form.querySelectorAll(".form__input")}showInputError(e,t){e.classList.add(this._inputErrorClass);const r=this._form.querySelector(`.${e.id}-error`);r.textContent=t,r.classList.add(this._errorClass)}hideInputError(e){e.classList.remove(this._inputErrorClass),this._form.querySelector(`.${e.id}-error`).classList.remove(this._errorClass)}checkInputValidity(e){if(e.validity.valid)this.hideInputError(e);else{const t=e.validationMessage;this.showInputError(e,t)}}hasInvalidInput(){return this.inputList.some((e=>!e.validity.valid))}toggleButtonState(){this.hasInvalidInput()?(this.buttonElement.classList.add(this._inactiveButtonClass),this.buttonElement.setAttribute("disabled",!0)):(this.buttonElement.classList.remove(this._inactiveButtonClass),this.buttonElement.removeAttribute("disabled"))}setEventListeners(){this.inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this.buttonElement=this._form.querySelector(this._submitButtonSelector),this.toggleButtonState(),this.inputList.forEach((e=>{this.inputElement=e,this.inputElement.addEventListener("input",(()=>{this.checkInputValidity(e),this.hasInvalidInput(),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.toggleButtonState()})),this.setEventListeners()}clearError(){this._errorMessages.forEach((e=>{e.classList.remove("form__input-error_active")})),this._inputs.forEach((e=>{e.classList.remove("form__input_type_error")}))}resetSubmitButton(){this.buttonElement.classList.add(this._inactiveButtonClass),this.buttonElement.setAttribute("disabled",!0)}}class q{constructor(e){this.popup=e}open(){this.popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this.buttonClose=this.popup.querySelector(".modal__button-close"),this.buttonClose.addEventListener("click",(()=>{this.close()})),this.popup.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class I extends q{constructor(e,t){let{handleFormSubmit:r,handleClearError:s,renderLoading:n}=t;super(e),this.handleFormSubmit=r,this.form=this.popup.querySelector(".form"),this.handleClearError=s,this._renderLoading=n}close(){super.close(),this.form.reset(),this.handleClearError()}_getInputValues(){const e=this.form.querySelectorAll(".form__input"),t={};for(const r of e)t[r.name]=r.value;return t}setEventListeners(){super.setEventListeners(),this.form.addEventListener("submit",(e=>{this._renderLoading(),e.preventDefault(),this.handleFormSubmit(this._getInputValues())}))}}const U=new class extends q{constructor(e,t,r){super(e),this._modalImage=t,this._modalTitle=r}open(e){this._modalTitle.textContent=e.title,this._modalImage.src=e.link,this._modalImage.alt=`photo of ${e.title}`,super.open()}}(r,s,n);U.setEventListeners();const B=new class{constructor(e,t,r){this.name=e,this.job=t,this.avatar=r}getUserInfo(){return{name:this.name.textContent,about:this.job.textContent}}setUserInfo(e){let{name:t,about:r,avatar:s}=e;this.name.textContent=t,this.job.textContent=r,this.avatar.src=s}}(c,h,v),w=new C(m,_);w.enableValidation();const $=new C(m,p);$.enableValidation();const T=new C(m,f);T.enableValidation();const P=new I(o,{handleFormSubmit:e=>{A.editProfile(e).then((e=>{P.close(),B.setUserInfo(e),w.resetSubmitButton()})).catch((e=>{console.log(e)})).finally((()=>{g(!1,_,"Save")}))},handleClearError:()=>{w.clearError()},renderLoading:()=>{g(!0,_)}});P.setEventListeners(),i.addEventListener("click",(()=>{!function(e){let{name:t,about:r}=e;d.value=t,u.value=r}(B.getUserInfo()),P.open()}));const A=new class{constructor(e,t){let{baseUrl:r,headers:s}=e;this._baseUrl=r,this._headers=s,this._checkResponse=t}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}editProfile(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}addNewCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateProPic(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}returnUserInfoAndCards(){const e=[this.loadUserInfo(),this.getInitialCards()];return Promise.all(e)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f01264e8-2101-4ab7-b120-b09b55e63681","Content-Type":"application/json"}},(function(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)})),x=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=t}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}setItems(e){this._items=e}}({renderer:e=>{const t=function(e){const t=new y(e,"#card-template",k,{handleDelete:(e,t)=>{R.open(),R.catchSelectedCard(e,t)},handleLike:e=>{A.addLike(e).then((e=>{t.handleLikeButton()})).catch((e=>console.log(e)))},handleUnlike:e=>{A.deleteLike(e).then((e=>{t.handleLikeButton()})).catch((e=>console.log(e)))}});return t.generateCard()}(e);x.addItem(t)}},t);A.returnUserInfoAndCards().then((e=>{B.setUserInfo(e[0]),x.setItems(e[1].toReversed()),x.renderItems()})).catch((e=>console.error(e)));const F=new I(E,{handleFormSubmit:e=>{A.updateProPic(e.link).then((e=>{F.close(),B.setUserInfo(e),T.resetSubmitButton()})).catch((e=>console.error(e))).finally((()=>{g(!1,f,"Save")}))},handleClearError:()=>{T.clearError()},renderLoading:()=>{g(!0,f)}},T);F.setEventListeners(),S.addEventListener("click",(()=>{F.open()}));const R=new class extends q{constructor(e,t){let{handleFormSubmit:r,renderLoading:s}=t;super(e),this.handleFormSubmit=r,this.form=this.popup.querySelector(".form"),this._renderLoading=s}setEventListener(){super.setEventListeners(),this.form.addEventListener("submit",(e=>{e.preventDefault(),this._renderLoading(),this.handleFormSubmit(this.cardElement,this.id)}))}catchSelectedCard(e,t){this.cardElement=e,this.id=t}}(L,{handleFormSubmit:(e,t)=>{A.deleteCard(t).then((t=>{e.remove(),R.close()})).catch((e=>console.error(e))).finally((()=>{g(!1,b,"Yes")}))},renderLoading:()=>{g(!0,b)}});R.setEventListener();const D=new I(l,{handleFormSubmit:e=>{A.addNewCard(e).then((e=>{D.close(),x.setItems([e]),x.renderItems(),$.resetSubmitButton()})).catch((e=>console.error(e))).finally((()=>{g(!1,p,"Create")}))},handleClearError:()=>{$.clearError()},renderLoading:()=>{g(!0,p)}},$);D.setEventListeners(),a.addEventListener("click",(()=>{D.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,